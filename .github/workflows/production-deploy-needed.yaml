name: Check if production deployment is needed
on:
  workflow_call:
    inputs:
      paths:
        description: 'JSON array of paths to check for changes'
        required: true
        type: string
    outputs:
      deploy_needed:
        description: 'Boolean indicating if deployment is needed'
        value: ${{ jobs.production-deploy-needed.outputs.deploy_needed }}
jobs:
  production-deploy-needed:
    runs-on: ubuntu-latest
    outputs:
      deploy_needed: ${{ steps.check.outputs.deploy_needed }}
    steps:
      - name: Check out code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Check if deploy is needed
        id: check
        env:
          PATHS: ${{ toJson(inputs.paths) }}
        run: |
          env | sort
          set -x
          set -euo pipefail
          PATH_LIST=$(mktemp)
          # echo -n "${PATHS}" | jq -r .[] >${PATH_LIST}
          echo -n "${PATHS}" >${PATH_LIST}
          cat ${PATH_LIST}
          PREV_TAG=$(git tag --sort=v:refname | tail -n2 | head -n1)
          LAST_TAG=$(git tag --sort=v:refname | tail -n1)
          echo -e "PREV_TAG: ${PREV_TAG}\nLAST_TAG: ${LAST_TAG}"
          CHANGES_DETECTED=$(git diff --name-only ${PREV_TAG}..${LAST_TAG} | grep -Ef ${PATH_LIST} | wc -l || true)
          if [[ "${CHANGES_DETECTED}" -gt 0 ]]; then
            echo "deploy_needed=true" >> "${GITHUB_OUTPUT}"
          else
            echo "deploy_needed=false" >> "${GITHUB_OUTPUT}"
          fi
          rm -f ${PATH_LIST}
